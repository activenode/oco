var installCE=function(_document){var NODE_TYPE_TEXT=3,NODE_UPGRADED_KEY="__oco_upgraded_node__",_componentsDefined=[],_PF_componentsLibrary={};function _isPolyfillRequired(){return!("registerElement"in _document||"customElements"in window)}function _isComponentDefined(e){return-1!==_componentsDefined.indexOf(e)}function _containsCustomElements(e){return 0!==_componentsDefined.length&&0<e.querySelectorAll(_componentsDefined.join(",")).length}function _PF_setupHtmlObserver(e){new MutationObserver(function(e){e.forEach(function(e){var t=e.addedNodes;e.removedNodes;[].forEach.call(t,function(e){_recursiveTreeUpgrade(e)})})}).observe(_document,{attributes:!1,childList:!0,characterData:!1,subtree:!0})}function _PF_getUpgradeableNodes(e){var t=document.querySelectorAll(Array.isArray(e)?e.join(","):e);return 0===t.length?[]:[].filter.call(t,function(e){return!e[NODE_UPGRADED_KEY]})}function _PF_upgradeNode(e){if(!e[NODE_UPGRADED_KEY]){var t=e.tagName.toLowerCase(),n=_PF_componentsLibrary[t];n?(e.setAttribute("id","some_rand_id__"+Math.round(1e4*Math.random())),Object.setPrototypeOf(e,n),e.createdCallback(),e.attachedCallback()):console.error("Cannot upgrade",e," the prototype definition is not available")}}function _recursiveTreeUpgrade(e){e.nodeType!==NODE_TYPE_TEXT&&(console.log("go recursive on",e,e.nodeType),_isComponentDefined(e.tagName.toLowerCase())&&_PF_upgradeNode(e),_containsCustomElements(e)&&[].forEach.call(e.childNodes,function(e){_recursiveTreeUpgrade(e)}))}_isPolyfillRequired()&&("loading"===_document.readyState?_document.addEventListener("DOMContentLoaded",function(){_PF_setupHtmlObserver(),0<_componentsDefined.length&&_PF_getUpgradeableNodes(_componentsDefined).forEach(_PF_upgradeNode)}):_PF_setupHtmlObserver()),_document.defineElement=function(elementName,methodsObj){var getHtmlElementProto=function(){var t=Object.create(HTMLElement.prototype);return t[NODE_UPGRADED_KEY]=!0,Object.keys(methodsObj).forEach(function(e){t[e]=methodsObj[e]}),t};if("customElements"in window){var evalClass=eval("(function(){return class extends HTMLElement {constructor() { super(); this['"+NODE_UPGRADED_KEY+"'] = true;methodsObj.createdCallback.call(this);}connectedCallback() {if ('attachedCallback' in methodsObj) {methodsObj.attachedCallback.call(this);}}disconnectedCallback() {if ('detachedCallback' in methodsObj) {methodsObj.detachedCallback.call(this);}}}}());");customElements.define(elementName,evalClass)}else if("registerElement"in _document)_document.registerElement(elementName,{prototype:getHtmlElementProto()});else if(_PF_componentsLibrary[elementName]=getHtmlElementProto(),"loading"!==_document.readyState){var upgradeableNodes=_PF_getUpgradeableNodes(elementName);upgradeableNodes.forEach(_PF_upgradeNode)}_componentsDefined.push(elementName)}};installCE(document);